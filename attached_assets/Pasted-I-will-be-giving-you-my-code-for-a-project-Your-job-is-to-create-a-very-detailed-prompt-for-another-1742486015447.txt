I will be giving you my code for a project. Your job is to create a very detailed prompt for another AI. Make sure to note all the features. 

Please note that this code is from a google script application. For this project I want to use another database.

function doGet() {
  return HtmlService.createHtmlOutputFromFile('index')
      .setTitle('Boetepot Heren 8')
      .setXFrameOptionsMode(HtmlService.XFrameOptionsMode.ALLOWALL);
}

function getTotaalBoetes() {
  var sheet = SpreadsheetApp.getActiveSheet();
  var data = sheet.getDataRange().getValues();
  var total = 0;
  for (var i = 1; i < data.length; i++) {
    var amount = parseFloat(data[i][2]);
    if (!isNaN(amount)) total += amount;
  }
  return total;
}

function getRecentBoetesPublic() {
  var sheet = SpreadsheetApp.getActiveSheet();
  var data = sheet.getDataRange().getValues();
  var fines = [];
  for (var i = data.length - 1; i > 0; i--) {
    var date = data[i][1];
    if (date) {
      fines.push({
        speler: data[i][0] || '',
        datum: date.toString(),
        bedrag: data[i][2] || '0.00',
        reden: data[i][3] || ''
      });
    }
  }
  return fines.slice(0, 10);
}

function getPlayerTotals() {
  var sheet = SpreadsheetApp.getActiveSheet();
  var data = sheet.getDataRange().getValues();
  var playerTotals = {};
  for (var i = 1; i < data.length; i++) {
    var player = data[i][0];
    var amount = parseFloat(data[i][2]) || 0;
    if (player) {
      if (playerTotals[player]) {
        playerTotals[player] += amount;
      } else {
        playerTotals[player] = amount;
      }
    }
  }
  return Object.keys(playerTotals).map(player => ({ speler: player, totaal: playerTotals[player] }));
}

function getPlayerHistory(speler) {
  var sheet = SpreadsheetApp.getActiveSheet();
  var data = sheet.getDataRange().getValues();
  var history = [];
  for (var i = 1; i < data.length; i++) {
    if (data[i][0] === speler && data[i][1]) {
      history.push({
        datum: data[i][1].toString(),
        bedrag: data[i][2] || '0.00',
        reden: data[i][3] || ''
      });
    }
  }
  return history.sort((a, b) => new Date(b.datum) - new Date(a.datum));
}

function getAllFines() {
  var sheet = SpreadsheetApp.getActiveSheet();
  var data = sheet.getDataRange().getValues();
  var fines = [];
  for (var i = data.length - 1; i > 0; i--) {
    var date = data[i][1];
    if (date) {
      fines.push({
        speler: data[i][0] || '',
        datum: date.toString(),
        bedrag: data[i][2] || '0.00',
        reden: data[i][3] || '',
        row: i + 1
      });
    }
  }
  return fines;
}

function addFine(speler, reden, bedrag) {
  var sheet = SpreadsheetApp.getActiveSheet();
  var date = new Date().toLocaleString('nl-NL');
  sheet.appendRow([speler || '', date, parseFloat(bedrag) || 0, reden || '']);
  return "Boete succesvol toegevoegd!";
}

function deleteFine(row) {
  var sheet = SpreadsheetApp.getActiveSheet();
  sheet.deleteRow(row);
}

function getDropdownOptions() {
  var sheet = SpreadsheetApp.getActiveSheet();
  var data = sheet.getDataRange().getValues();
  var players = new Set();
  for (var i = 1; i < data.length; i++) {
    if (data[i][0]) players.add(data[i][0]);
  }
  return { spelers: Array.from(players) };
}


<!DOCTYPE html>
<html lang="nl">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">
  <title>Boetepot Heren 8</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&family=Montserrat:wght@500&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.min.css">
  <style>
    :root {
      --primary: #2b6cb0;
      --primary-dark: #2c5282;
      --secondary: #4a90e2;
      --background: #e2e8f0;
      --card-bg: #fff;
      --text: #2d3748;
      --text-light: #4a5568;
      --shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    }

    body.dark {
      --primary: #4a90e2;
      --primary-dark: #2b6cb0;
      --background: #1a202c;
      --card-bg: #2d3748;
      --text: #e2e8f0;
      --text-light: #e2e8f0;
      --shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    }

    body {
      font-family: 'Inter', sans-serif;
      background: var(--background);
      margin: 0;
      padding: 15px;
      color: var(--text);
      transition: background 0.3s ease, color 0.3s ease;
      overflow-x: hidden;
      line-height: 1.6;
    }

    .header {
      text-align: center;
      padding: 20px;
      background: linear-gradient(135deg, var(--primary), var(--secondary));
      border-radius: 12px;
      box-shadow: var(--shadow);
      position: sticky;
      top: 0;
      z-index: 10;
      margin-bottom: 20px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .header h1 {
      font-size: 2.8em;
      color: #fff;
      margin: 0;
      font-weight: 800;
      letter-spacing: 0.5px;
    }

    .theme-toggle {
      width: 120px;
      height: 60px;
      background: var(--primary);
      border: none;
      border-radius: 30px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.3s ease;
      box-shadow: var(--shadow);
    }

    .theme-toggle:hover {
      transform: scale(1.05);
      box-shadow: 0 0 10px var(--primary);
    }

    .theme-toggle i {
      font-size: 2rem;
      color: #ffffff;
      transition: transform 0.3s ease;
    }

    .theme-toggle.active i {
      transform: rotate(360deg);
    }

    /* New Total Fine Counter Styles */
    .total-fine-counter {
      display: flex;
      justify-content: center;
      margin: 20px 0;
    }

    .fine-card {
      background: var(--card-bg);
      border: 3px solid transparent;
      border-image: linear-gradient(135deg, var(--primary), var(--secondary)) 1;
      border-radius: 12px;
      padding: 20px;
      width: 300px;
      display: flex;
      align-items: center;
      justify-content: space-between;
      box-shadow: var(--shadow);
      transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .fine-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
    }

    .fine-content {
      text-align: left;
    }

    .fine-content small {
      font-size: 1.2em;
      color: var(--text-light);
      font-weight: 600;
    }

    .fine-content span {
      font-size: 2.8em;
      font-weight: 800;
      color: var(--primary);
      display: block;
    }

    .fine-card i {
      font-size: 2.5em;
      color: var(--secondary);
    }

    @media (max-width: 600px) {
      .fine-card {
        width: 250px;
        padding: 15px;
      }
      .fine-content small {
        font-size: 1em;
      }
      .fine-content span {
        font-size: 2.2em;
      }
      .fine-card i {
        font-size: 2em;
      }
    }

    .content {
      max-width: 1200px;
      margin: 0 auto;
      display: grid;
      grid-template-areas: "player recent" "admin admin" "login login";
      gap: 15px;
    }

    .section {
      background: var(--card-bg);
      border-radius: 12px;
      padding: 20px;
      box-shadow: var(--shadow);
      transition: background 0.3s ease;
      min-height: 400px;
    }

    #playerHistorySection { grid-area: player; }
    #recentFinesSection { grid-area: recent; }
    #adminPanel { grid-area: admin; min-height: 500px; }
    #loginSection { 
      grid-area: login;
      width: calc(100% - 6cm);
      max-width: 400px;
      min-height: auto;
      margin: 0 auto;
    }

    .section h2 {
      font-size: 2.2em;
      color: var(--primary);
      border-bottom: 3px solid var(--primary);
      padding-bottom: 10px;
      margin-bottom: 15px;
      font-weight: 700;
    }

    .table-wrapper {
      overflow-x: auto;
      margin-top: 10px;
      background: var(--card-bg);
      border-radius: 8px;
      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);
    }

    table, th, td {
      font-size: 1.2em;
    }

    th, td {
      padding: 15px;
      text-align: center;
      border-bottom: 1px solid var(--background);
    }

    th {
      background: var(--primary);
      color: #fff;
      font-weight: 600;
      text-transform: uppercase;
      position: sticky;
      top: 0;
      z-index: 1;
    }

    td {
      background: var(--card-bg);
      transition: background 0.2s ease;
    }

    tr:hover td {
      background: rgba(74, 144, 226, 0.1);
    }

    .admin-input {
      font-size: 1.6em;
      padding: 12px;
      border-radius: 12px;
      border: 2px solid var(--primary);
      width: 100%;
      box-sizing: border-box;
    }

    #addFineForm {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 20px;
    }

    #addFineForm button {
      font-size: 1.6em;
      padding: 12px 20px;
      width: auto;
      border-radius: 25px;
      background: var(--primary);
      color: #fff;
      border: none;
      cursor: pointer;
      margin-top: 20px;
    }

    .form-group {
      width: 100%;
      max-width: 400px;
    }

    .form-group label {
      font-size: 1.6em;
      font-weight: 600;
      color: var(--text-light);
      margin-bottom: 10px;
      display: block;
      text-align: left;
    }

    .chosen-container {
      width: 100% !important;
    }

    .chosen-single {
      border-radius: 12px !important;
      padding: 12px !important;
      font-size: 1.6em !important;
    }
  </style>
</head>
<body>
  <div class="header">
    <h1>Boetepot Heren 8</h1>
    <button class="theme-toggle" onclick="toggleTheme()">
      <i id="theme-icon" class="fas fa-moon"></i>
    </button>
  </div>

  <!-- New Total Fine Counter -->
  <div class="total-fine-counter">
    <div class="fine-card">
      <div class="fine-content">
        <small>Total Fines</small>
        <span id="totaalBoetes">0.00€</span>
      </div>
      <i class="fas fa-coins"></i>
    </div>
  </div>

  <div class="content">
    <div class="section" id="playerHistorySection">
      <h2>Speler historie</h2>
      <select id="playerInput" class="chosen-select" data-placeholder="Selecteer speler">
        <option value=""></option>
      </select>
      <button onclick="loadPlayerHistory()"><i class="fas fa-history"></i> Toon historie</button>
      <div class="table-wrapper" id="playerHistory"></div>
      <div id="playerTotal" style="margin-top: 10px;"></div>
      <div class="leaderboard" id="leaderboard">
        <h3>Leaderboard</h3>
        <div id="leaderboardTable">Loading leaderboard...</div>
      </div>
    </div>
    <div class="section" id="recentFinesSection">
      <h2>Recente boetes</h2>
      <div class="table-wrapper" id="recentBoetes">Loading...</div>
    </div>
    <div class="section" id="adminPanel" style="display: none;">
      <a href="#" class="back-link" onclick="logoutAdmin(); return false;">Terug naar overzicht</a>
      <h2>Admin Dashboard</h2>
      <div class="admin-form">
        <form id="addFineForm">
          <div class="form-group">
            <label for="playerAdminInput">Speler</label>
            <select id="playerAdminInput" class="admin-input chosen-select" data-placeholder="Selecteer speler"></select>
          </div>
          <div class="form-group">
            <label for="amount">Bedrag</label>
            <input type="number" id="amount" class="admin-input" step="0.01" required>
          </div>
          <div class="form-group">
            <label for="reasonAdminInput">Reden</label>
            <select id="reasonAdminInput" class="admin-input chosen-select" data-placeholder="Selecteer reden"></select>
          </div>
          <button type="submit">Boete toevoegen</button>
        </form>
        <div id="addFineMessage"></div>
      </div>
      <div class="admin-fines">
        <h3>Alle boetes</h3>
        <input type="text" id="fineSearch" placeholder="Zoek op speler of reden" style="margin-bottom: 15px;">
        <div class="table-wrapper" id="allFines">Loading...</div>
        <div id="pagination" class="pagination"></div>
      </div>
    </div>
    <div class="section" id="loginSection">
      <h2>Admin Login</h2>
      <form id="loginForm">
        <input type="password" id="password" placeholder="Wachtwoord" required>
        <button type="submit"><i class="fas fa-sign-in-alt"></i> Log in</button>
      </form>
      <div id="loginMessage"></div>
    </div>
  </div>

  <div id="toast" class="toast"></div>
  <div id="loadingSpinner">
    <div class="spinner"></div>
  </div>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.jquery.min.js"></script>
  <script>
    // Count-up animation function
    function animateCounter(element, start, end, duration) {
      let startTime = null;
      const step = (timestamp) => {
        if (!startTime) startTime = timestamp;
        const progress = timestamp - startTime;
        const current = Math.min(start + (progress / duration) * (end - start), end);
        element.innerText = current.toFixed(2) + "€";
        if (progress < duration) {
          requestAnimationFrame(step);
        }
      };
      requestAnimationFrame(step);
    }

    // Load total fines with animation
    function loadTotaalBoetes() {
      toggleLoading(true);
      google.script.run.withSuccessHandler(function(total) {
        const counterElement = document.getElementById("totaalBoetes");
        animateCounter(counterElement, 0, total, 2000); // Animate over 2 seconds
        toggleLoading(false);
      }).withFailureHandler(function(error) {
        showToast("Fout bij laden totaal boetes: " + error.message, true);
        toggleLoading(false);
      }).getTotaalBoetes();
    }

    // Placeholder functions (replace with your actual implementations)
    function toggleTheme() {
      document.body.classList.toggle('dark');
      const icon = document.getElementById('theme-icon');
      icon.classList.toggle('fa-moon');
      icon.classList.toggle('fa-sun');
    }

    function toggleLoading(show) {
      document.getElementById('loadingSpinner').style.display = show ? 'block' : 'none';
    }

    function showToast(message, isError) {
      const toast = document.getElementById('toast');
      toast.textContent = message;
      toast.style.background = isError ? '#e53e3e' : '#48bb78';
      toast.style.display = 'block';
      setTimeout(() => toast.style.display = 'none', 3000);
    }

    function loadPlayerHistory() { /* Your implementation */ }
    function logoutAdmin() { /* Your implementation */ }

    // Initialize the page
    $(document).ready(function() {
      $('.chosen-select').chosen();
      loadTotaalBoetes();
    });
  </script>
</body>
</html>